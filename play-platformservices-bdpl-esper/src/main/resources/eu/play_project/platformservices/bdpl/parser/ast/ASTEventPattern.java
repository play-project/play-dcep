/* Generated By:JJTree: Do not edit this line. ASTEventPattern.java Version 4.3 */
/* JavaCCOptions:MULTI=true,NODE_USES_PARSER=false,VISITOR=true,TRACK_TOKENS=false,NODE_PREFIX=AST,NODE_EXTENDS=,NODE_FACTORY=,SUPPORT_CLASS_VISIBILITY_PUBLIC=true */
package org.openrdf.query.parser.bdpl.ast;


public
class ASTEventPattern extends SimpleNode {
	
	/*
	 * !!! According to the grammar rules, there could be only 2 types of EventPattern.
	 * The 1st is the toppest EventPattern that is not enclosed with parenthesis and represents the whole EventPattern.
	 * The 2nd is the not toppest EventPattern that must be enclosed with parenthesis and represents a sub EventPattern.
	 */
	private boolean top;
	
	public void setTop(boolean t){
		top = t;
	}
	
	public boolean getTop(){
		return top;
	}
	  
  public ASTEventPattern(int id) {
    super(id);
  }

  public ASTEventPattern(SyntaxTreeBuilder p, int id) {
    super(p, id);
  }


  /** Accept the visitor. **/
  public Object jjtAccept(SyntaxTreeBuilderVisitor visitor, Object data) throws VisitorException {
    return visitor.visit(this, data);
  }
}

